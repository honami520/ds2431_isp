<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM3210C-EVAL\STM32103.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM3210C-EVAL\STM32103.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Thu Jan 17 17:38:32 2013
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; key_done &rArr; file_write &rArr; CH376FileCreate &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[35]">main</a> from main.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[38]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CH376ByteLocate</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, file_sys.o(i.CH376ByteLocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CH376ByteLocate &rArr; Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[40]"></a>CH376ByteWrite</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, file_sys.o(i.CH376ByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CH376ByteWrite &rArr; Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[42]"></a>CH376FileClose</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, file_sys.o(i.CH376FileClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CH376FileClose &rArr; CH376SendCmdDatWaitInt &rArr; Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[45]"></a>CH376FileCreate</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, file_sys.o(i.CH376FileCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376FileCreate &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[48]"></a>CH376FileOpen</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, file_sys.o(i.CH376FileOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CH376FileOpen &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[4a]"></a>CH376GetFileSize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, file_sys.o(i.CH376GetFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CH376GetFileSize &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[4c]"></a>CH376Read32bitDat</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, file_sys.o(i.CH376Read32bitDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
</UL>

<P><STRONG><a name="[4b]"></a>CH376ReadVar32</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, file_sys.o(i.CH376ReadVar32))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetFileSize
</UL>

<P><STRONG><a name="[4e]"></a>CH376ReadVar8</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, file_sys.o(i.CH376ReadVar8))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH376ReadVar8 &rArr; CH376_WR_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
</UL>

<P><STRONG><a name="[43]"></a>CH376SendCmdDatWaitInt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, file_sys.o(i.CH376SendCmdDatWaitInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CH376SendCmdDatWaitInt &rArr; Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
</UL>

<P><STRONG><a name="[47]"></a>CH376SendCmdWaitInt</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, file_sys.o(i.CH376SendCmdWaitInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
</UL>

<P><STRONG><a name="[46]"></a>CH376SetFileName</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, file_sys.o(i.CH376SetFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
</UL>

<P><STRONG><a name="[41]"></a>CH376WriteReqBlock</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, file_sys.o(i.CH376WriteReqBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH376WriteReqBlock &rArr; CH376_WR_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
</UL>

<P><STRONG><a name="[49]"></a>CH376WriteVar32</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, file_sys.o(i.CH376WriteVar32))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH376WriteVar32 &rArr; CH376_WR_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
</UL>

<P><STRONG><a name="[50]"></a>CH376_DISK_CONNECT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ch376.o(i.CH376_DISK_CONNECT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH376_DISK_CONNECT &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_nc_handle
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
</UL>

<P><STRONG><a name="[52]"></a>CH376_DISK_MOUNT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ch376.o(i.CH376_DISK_MOUNT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH376_DISK_MOUNT &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
</UL>

<P><STRONG><a name="[53]"></a>CH376_HOST_INIT</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ch376.o(i.CH376_HOST_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CH376_HOST_INIT &rArr; CH376_SPI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>CH376_RD_DAT_PORT</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ch376.o(i.CH376_RD_DAT_PORT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
</UL>

<P><STRONG><a name="[55]"></a>CH376_ReadWriteByte</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ch376.o(i.CH376_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_DAT_PORT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>

<P><STRONG><a name="[54]"></a>CH376_SPI_Init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, ch376.o(i.CH376_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CH376_SPI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
</UL>

<P><STRONG><a name="[3c]"></a>CH376_WR_CMD_PORT</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ch376.o(i.CH376_WR_CMD_PORT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_MOUNT
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_CONNECT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[3d]"></a>CH376_WR_DAT_PORT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ch376.o(i.CH376_WR_DAT_PORT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH376_WR_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>EE_Init</STRONG> (Thumb, 486 bytes, Stack size 32 bytes, eeprom.o(i.EE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EE_Init &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Config
</UL>

<P><STRONG><a name="[62]"></a>EE_ReadVariable</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, eeprom.o(i.EE_ReadVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_read32
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_read16
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
</UL>

<P><STRONG><a name="[66]"></a>EE_WriteVariable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, eeprom.o(i.EE_WriteVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write16
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write32
</UL>

<P><STRONG><a name="[5f]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
</UL>

<P><STRONG><a name="[68]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[60]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
</UL>

<P><STRONG><a name="[6a]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Config
</UL>

<P><STRONG><a name="[67]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[69]"></a>Flash_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_eep.o(i.Flash_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Flash_Config &rArr; EE_Init &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
</UL>

<P><STRONG><a name="[5a]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
</UL>

<P><STRONG><a name="[3e]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_MOUNT
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_CONNECT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[5c]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
</UL>

<P><STRONG><a name="[56]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>

<P><STRONG><a name="[58]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>

<P><STRONG><a name="[57]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_ReadWriteByte
</UL>

<P><STRONG><a name="[5b]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_SPI_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>Wait376Interrupt</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, file_sys.o(i.Wait376Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Wait376Interrupt &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[91]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[92]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6e]"></a>ds2431_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ds2431.o(i.ds2431_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ds2431_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>ds2431_read</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ds2431.o(i.ds2431_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ds2431_read &rArr; read_rom &rArr; read_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rom
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mem
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ow_rst
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_done
</UL>

<P><STRONG><a name="[73]"></a>eep_init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, flash_eep.o(i.eep_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = eep_init &rArr; eep_write16 &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write16
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write32
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_read32
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_read16
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>eep_read16</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, flash_eep.o(i.eep_read16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = eep_read16 &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
</UL>

<P><STRONG><a name="[74]"></a>eep_read32</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, flash_eep.o(i.eep_read32))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = eep_read32 &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
</UL>

<P><STRONG><a name="[76]"></a>eep_write16</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, flash_eep.o(i.eep_write16))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = eep_write16 &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_done
</UL>

<P><STRONG><a name="[77]"></a>eep_write32</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, flash_eep.o(i.eep_write32))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = eep_write32 &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
</UL>

<P><STRONG><a name="[78]"></a>file_write</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, key.o(i.file_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = file_write &rArr; CH376FileCreate &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetFileSize
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_buf_in
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_done
</UL>

<P><STRONG><a name="[7a]"></a>key_done</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, key.o(i.key_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = key_done &rArr; file_write &rArr; CH376FileCreate &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write16
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_read
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_check
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>key_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, key.o(i.key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = key_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>key_scan</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, key.o(i.key_scan))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>led_handle</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, tm1640.o(i.led_handle))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[7d]"></a>led_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tm1640.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = led_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; key_done &rArr; file_write &rArr; CH376FileCreate &rArr; CH376SetFileName &rArr; CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; CH376_RD_DAT_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_nc_handle
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_handle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_scan
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[44]"></a>mdelay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tm1640.o(i.mdelay))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_check_handle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_HOST_INIT
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[70]"></a>ow_rst</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, ds2431.o(i.ow_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ow_rst
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rom
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_read
</UL>

<P><STRONG><a name="[84]"></a>read_dat</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, ds2431.o(i.read_dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = read_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rom
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mem
</UL>

<P><STRONG><a name="[72]"></a>read_mem</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ds2431.o(i.read_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = read_mem &rArr; read_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_dat
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_read
</UL>

<P><STRONG><a name="[71]"></a>read_rom</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ds2431.o(i.read_rom))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = read_rom &rArr; read_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_dat
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ow_rst
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_read
</UL>

<P><STRONG><a name="[7b]"></a>rom_check</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, key.o(i.rom_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rom_check
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_done
</UL>

<P><STRONG><a name="[81]"></a>seg_handle</STRONG> (Thumb, 482 bytes, Stack size 4 bytes, tm1640.o(i.seg_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = seg_handle &rArr; write_dat &rArr; tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_dat
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>seg_init</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, tm1640.o(i.seg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = seg_init &rArr; seg_handle &rArr; write_dat &rArr; tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_init
</UL>

<P><STRONG><a name="[85]"></a>send_cmd</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, ds2431.o(i.send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rom
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mem
</UL>

<P><STRONG><a name="[7e]"></a>systick_init</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, main.o(i.systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = systick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>tm1640_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tm1640.o(i.tm1640_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tm1640_init &rArr; seg_init &rArr; seg_handle &rArr; write_dat &rArr; tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>tm1640_start</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, tm1640.o(i.tm1640_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tm1640_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_dat
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>

<P><STRONG><a name="[8a]"></a>tm1640_stop</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, tm1640.o(i.tm1640_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tm1640_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_dat
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>

<P><STRONG><a name="[8b]"></a>tm1640_write_byte</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, tm1640.o(i.tm1640_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_dat
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>

<P><STRONG><a name="[4f]"></a>udelay</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tm1640.o(i.udelay))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_dat
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ow_rst
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_write_byte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_stop
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_start
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds2431_read
</UL>

<P><STRONG><a name="[79]"></a>usb_buf_in</STRONG> (Thumb, 680 bytes, Stack size 12 bytes, key.o(i.usb_buf_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usb_buf_in
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_write
</UL>

<P><STRONG><a name="[82]"></a>usb_check_handle</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, ch376.o(i.usb_check_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = usb_check_handle &rArr; eep_write16 &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_MOUNT
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_CONNECT
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eep_write16
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetFileSize
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>usb_nc_handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ch376.o(i.usb_nc_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usb_nc_handle &rArr; CH376_DISK_CONNECT &rArr; wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_CONNECT
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>wait_interrupt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ch376.o(i.wait_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wait_interrupt &rArr; CH376_WR_CMD_PORT &rArr; CH376_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_WR_CMD_PORT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_RD_DAT_PORT
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_MOUNT
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_DISK_CONNECT
</UL>

<P><STRONG><a name="[86]"></a>write_cmd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tm1640.o(i.write_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = write_cmd &rArr; tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_write_byte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_stop
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_start
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_handle
</UL>

<P><STRONG><a name="[87]"></a>write_dat</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tm1640.o(i.write_dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = write_dat &rArr; tm1640_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_write_byte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_stop
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tm1640_start
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_handle
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6b]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6c]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[65]"></a>EE_FindValidPage</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, eeprom.o(i.EE_FindValidPage))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
</UL>

<P><STRONG><a name="[5e]"></a>EE_Format</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, eeprom.o(i.EE_Format))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EE_Format &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[64]"></a>EE_PageTransfer</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, eeprom.o(i.EE_PageTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>

<P><STRONG><a name="[63]"></a>EE_VerifyPageFullWriteVariable</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, eeprom.o(i.EE_VerifyPageFullWriteVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
